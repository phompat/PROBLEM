#include <bits/stdc++.h>
using namespace std;
#define ll long long
////consider this problem as each range
void solve(){
    int n;
    cin>>n;
    vector<int>a(n);
    for(int i=0;i<n;i++)cin>>a[i];
    sort(a.begin(),a.end());
    set<int>s,e;
    vector<int>keep;
    for(int i=0;i<n;i++){
        e.insert(a[i]+n);
        s.insert(a[i]+1);
    }
    ///**** using set to have all distinct numbers of array a  because from permutation there are also distinct numbers that will be
            added to the array a    if 1,1,2  and the target is 3 so 1 need to be added 2 and after that 2 is already used so number
            1 in the second position can not be added 2
    ****///
    for(auto x:e){
        keep.push_back(x);
    }
    reverse(keep.begin(),keep.end());
    int ans=1,countt=0;
    for(auto x:s){
        countt++;
        while(!keep.empty()&&keep.back()<x){
            countt--;
            keep.pop_back();
        }
        ans=max(ans,countt);
    }
    cout<<ans<<endl;

}
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    int t;cin>>t;
    while(t--)solve();
}
