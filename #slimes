#include <bits/stdc++.h>
using namespace std;
#define  ll long long
void solve(){
    ll n;
    cin>>n;
    vector<ll>a(n+1);
    vector<ll>dp(n+1,0),diff(n+1,0),ans(n+1,LLONG_MAX);
    for(int i=1;i<=n;i++){
        cin>>a[i];
        dp[i]=dp[i-1]+a[i];
        if(a[i]!=a[i-1])diff[i]=diff[i-1]+1;
        else diff[i]=diff[i-1];
    }
    for(int i=1;i<=n;i++){
        if((i>1&&a[i]<a[i-1])||i<n&&a[i]<a[i+1])ans[i]=1;   //**if the neighbor is greater that a[i]
        //***binary search from left to the position i-1
        int l=1,r=i-1;
        while(l<=r){
            ll mid=(l+r)/2;   //**the position
            if(dp[i-1]-dp[mid-1]>a[i]&&diff[i-1]-diff[mid]>=1){
                ans[i]=min(ans[i],i-mid);
                l=mid+1;
            }
            else r=mid-1;
        }
        //**binary search from right to the  position i+1
        l=i+1,r=n;
        while(l<=r){
            ll mid=(l+r)/2;
            if(dp[mid]-dp[i]>a[i]&&diff[mid]-diff[i+1]>=1){
                ans[i]=min(ans[i],mid-i);
                r=mid-1;
            }
            else l=mid+1;
        }
    }
    for(int i=1;i<=n;i++){
        if(ans[i]==LLONG_MAX)cout<<"-1"<<" ";
        else cout<<ans[i]<<" ";
    }
    cout<<endl;
}
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    int t;
    cin>>t;
    while(t--)solve();
    return 0;
}
