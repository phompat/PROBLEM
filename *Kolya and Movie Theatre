#include <bits/stdc++.h>
using namespace std;
#define ll long long
/* 1.) from the problem   if starting from index 1 : A(i1)-d*(i1-0) + A(i2)-d*(i2-i1) + A(i3)-d*(i3-i2) ===> (A(i1)+A(i2)+A(i3))-d*(i3) ***/

/* 2.) find maximum the the entertainments like (A(i1))+(A(i2))+(A(i3)) and can visit at most M movies***/

void solve(){
    ll ans=0,sum=0;
    ll n,m,d;
    cin>>n>>m>>d;
    vector<ll>a(n+1);
    for(int i=0;i<n;i++)cin>>a[i];
    priority_queue<ll,vector<ll>,greater<ll>>q;
    for(int i=0;i<n;i++){
        if(a[i]<0)continue;
        else{
            sum+=a[i];
            q.push(a[i]);
            if(q.size()>m){
                sum-=q.top();
                q.pop();
            }
        }
        ans=max(ans,sum-(d*(i+1)));
    }
    cout<<ans<<"\n";
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    int t;
    cin>>t;
    while(t--)solve();
    return 0;
}
