#include <bits/stdc++.h>
using namespace std;
#define ll long long
/*
    i can only repaint one plank so ---> what i can do is to repaint the largest distance in the middle position in the distance
                                         and compare to the second largest distance

*/

void solve(){
    int n,m;
    cin>>n>>m;
    vector<int>a(n+1);
    for(int i=1;i<=n;i++)cin>>a[i];
    vector<int>max1(m+1,0),max2(m+1,0);
    vector<int>position(m+1,0);
    for(int i=1;i<=n;i++){
        int temt=i-position[a[i]]-1;
        if(temt>=max1[a[i]]){
            max2[a[i]]=max1[a[i]];
            max1[a[i]]=temt;
        }
        else if(temt>=max2[a[i]])max2[a[i]]=temt;
        position[a[i]]=i;
    }
    for(int i=1;i<=m;i++){//calculate from the last position of each color plank to the end how the distance it is
        int temt=n-position[i];
        if(temt>=max1[i]){
            max2[i]=max1[i];
            max1[i]=temt;
        }
        else if(temt>=max2[i])max2[i]=temt;
    }
    int ans=INT_MAX;
    for(int i=1;i<=m;i++){
        int temt=max(max1[i]/2,max2[i]);
        ans=min(temt,ans);
    }
    cout<<ans<<"\n";
}


int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    ll t;
    cin>>t;
    while(t--)solve();
}
