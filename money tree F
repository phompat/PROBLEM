#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    int n;
    cin>>n;
    while(n--){
        int a,b,x;
        cin>>a>>b;
        vector<int>h,f,dp(a+2,0),position(a+1,0);
        for(int i=0;i<a;i++){
            cin>>x;
            f.push_back(x);
        }
        for(int i=0;i<a;i++){
            cin>>x;
            h.push_back(x);
        }
        
        //dp-->sum
        for(int i=1;i<=a;i++)dp[i]=dp[i-1]+f[i-1];
        
        //keep positon
        for(int i=0;i<a;i++){
            if(i==0)position[i]++;
            else if(h[i-1]%h[i]==0&&h[i-1]>=h[i])position[i]=position[i-1]+1;
            else position[i]=1;
        }

        //using binary search to find size
        long long l=0,r=INT_MAX;
        long long keep=0;
        while(l<r){
            long long mid=(l+r)/2;// find size
            bool check=false;
            for(int i=0;i<a;i++){
                if(position[i]<mid)continue;
                else if(position[i]>=mid){
                    if(dp[i+1]-dp[i-mid+1]<=b){
                        keep=mid;
                        check=true;
                    }
                }
            }
            if(check)l=mid+1;
            else r=mid;
        }
        cout<<keep<<endl;
    }
    return 0;
}
